#!/bin/sh

set -e

prefix=@prefix@
exec_prefix=@exec_prefix@
bindir=@bindir@
libdir=@libdir@
sysconfdir=@sysconfdir@

if test -z "$LMDBG_SOEXT"; then
    LMDBG_SOEXT=so
fi
if test -z "$LMDBG_LIBDYN"; then
    LMDBG_LIBDYN=$libdir/liblmdbg.$LMDBG_SOEXT
fi

usage () {
    echo -n "\
lmdbg-run is intended to run your program with
liblmdbg.$LMDBG_SOEXT LD_PRELOAD-ed in order to log
the calls of the following functions:
malloc, free, realloc and memalign.
Set LMDBG_LIBDYN environment variable to liblmdbg.$LMDBG_SOEXT
The default is $libdir/liblmdbg.$LMDBG_SOEXT.

usage: lmdbg-run [OPTIONS] <prog> [args...]
OPTIONS:
  -h --help                   display this screen
  -V --version                display version
  -o --log <filename>         set a filename for logging
  -p --pipe <pipe>            save pipe's output to log file
  -v --verbose                verbose loggin
"
}

version (){
cat <<EOF
lmdbg-run @LMDBG_VERSION@
EOF
}

while test $# -ne 0; do
    case $1 in
	-h|--help)
	    usage
	    exit 0;;
	-V|--version)
	    version
	    exit 0;;
	-v|--verbose)
	    LMDBG_VERBOSE=1;
	    export LMDBG_VERBOSE;;
	-o|--log)
	    output_file=$2
	    shift;;
        -p|--pipe)
	    pipe=$2
	    shift;;
	--)
	    shift
	    break;;
	-*)
	    echo "unknown option '$1'" 1>&2
	    exit 1;;
	*)
	    break;;
    esac

    shift
done

if [ ! $TMPDIR ]; then
    TMPDIR=/tmp
fi

if test "$pipe"; then
    fifo_file=`mktemp -u /tmp/lmdbg-run.XXXXXX` || {
	exit 2
    }

    trap 'rm -f "$fifo_file"' 0 1 2 3 5 15

    mkfifo -m 600 "$fifo_file" || {
	exit 3
    }

    eval "$pipe" < "$fifo_file" > "$output_file" 2>/dev/null &
    output_file="$fifo_file"
fi

if test "$LMDBG_VERBOSE"; then
    echo Running "'$@' with LD_PRELOAD=$LMDBG_LIBDYN" 1>&2
fi

(env LMDBG_LOGFILE="$output_file" LD_PRELOAD="$LMDBG_LIBDYN" "$@")

wait

if test "$LMDBG_VERBOSE"; then
    echo Done.
fi
