#!/bin/sh

set -e

LC_ALL=C
export LC_ALL

prefix=@prefix@
exec_prefix=@exec_prefix@
bindir=@bindir@
libdir=@libdir@
sysconfdir=@sysconfdir@

if test -z "$LMDBG_SOEXT"; then
    LMDBG_SOEXT=so
fi
if test -z "$LMDBG_LIBDYN"; then
    LMDBG_LIBDYN=$libdir/liblmdbg.so
fi

usage (){
    echo -n "\
lmdbg-sym analyses lmdbg-run's output and converts
function addresses to source code position.
Set LMDBG_LIBDYN environment variable to liblmdbg.so
The default is $libdir/liblmdbg.so.

usage:
    lmdbg-sym [OPTIONS] <prog> [files...]
OPTIONS:
    -h --help        displays this screen
    -V --version     display version
    -g --with-gdb    use 'gdb'. By default 'addr2line' is used.
       --with-so <filename> <flags>
                     dlopen(3) specified libraries with specified flags.
                     Possible flags are: RTLD_LAZY, RTLD_NOW and RTLD_GLOBAL
"
}

version (){
cat <<EOF
lmdbg-sym-@LMDBG_VERSION@
EOF
}

additional_libs=

while [ $# -ne 0 ]; do
    case $1 in
	-h|--help)
	    usage
	    exit 0;;
	-V|--version)
	    version
	    exit 0;;
	-g|--with-gdb)
	    with_gdb=1;;
	-a)
	    with_gdb='';;
        --with-so)
	    additional_libs="${additional_libs},$2:$3"
	    shift
	    shift;;
	--)
	    shift
	    break;;
	-*)
	    echo "unknown option '$1'" 1>&2
	    exit 1;;
	*)
	    break;;
    esac

    shift
done

#echo "additional_libs=$additional_libs" 1>&2

if test $# -lt 1; then
    echo "Run lmdbg-sym --help for help"
    exit 1
fi

prog=$1
shift

tmp_dir="/tmp/lmdbg-sym.$$"
trap "rm -rf $tmp_dir" 0 1 2 15
mkdir -m 700 "$tmp_dir"

tmp_file=$tmp_dir/0
tmp_file1=$tmp_dir/1
tmp_file2=$tmp_dir/2
tmp_file3=$tmp_dir/3

if test $# -ne 1; then
    cat "$@" > "$tmp_file"
else
    tmp_file=$1
fi

test $? || exit 3

@AWK@ '
NF == 1 {
    hash [$1] = ""
}
END {
    for (addr in hash){
	print addr
    }
}' "$tmp_file" > "$tmp_file1"

if test "_$with_gdb" = "_1"; then
    # command file for GDB
    {
	echo 'set width 0'
	echo 'break _init'
	echo 'set print demangle on'
	echo "set environment LD_PRELOAD=$LMDBG_LIBDYN"
	if test "$additional_libs"; then
	    echo "set environment LMDBG_ADD_LIBS=$additional_libs"
	fi
	echo 'run'
	echo 'set variable log_enabled=1'
#	echo 'p lmdbg_dlopen_add_libs()'
	echo 'print/x 0x22552255'
	awk '{print "b *" $0 "\ninfo break " NR+1}' "$tmp_file1"
	echo 'quit'
    } > "$tmp_file2"

    # GDB Solo!
    gdb -nx -q -batch -x $tmp_file2 "$prog" | # tee log |
    @AWK@ '
    !flag {
	flag = /22552255/
	next
    }
    $1 == "Breakpoint" { # result of `b *<address>` command
	for (i=1; i <= NF; ++i){
	    if ($i == "at"){
		gsub(/:$/, "", $(i+1))
		printf "%s", $(i+1)
	    }
	    if ($i == "file"){
		gsub(/[,.]$/, "", $(i+1))
		printf "\t%s:", $(i+1)
	    }
	    if ($i == "line"){
		gsub(/[,.]$/, "", $(i+1))
		printf "%s", $(i+1)
	    }
	}

	next
    }
    $2 == "breakpoint" { # result of `info break <NUM>` command
	if (match($0, / in .* at /)){
	    print "\t" substr($0, RSTART+4, RLENGTH-8)
	}else{
	    print ""
	}

	next
    }
    '
else
    # ADDR2LINE 
    xargs addr2line -e "$prog" < "$tmp_file1"
fi > $tmp_file3

@AWK@ -v tmp1=$tmp_file1 -v tmp3=$tmp_file3 '
BEGIN {
    while (0 < getline addr < tmp1 && 0 < getline src < tmp3){
#	print addr " --> " "`" src "`"
	if (src != ""){
	    h [addr] = src
#	    print addr, h [addr]
	}
    }
}
NF == 1 && $1 ~ /^0x[0-9a-fA-Z]+$/ {
    if ($1 in h){
	print " " h [$1]
    }else{
	print " " $1
    }

    next
}
{
    print $0
}' < "$tmp_file"
