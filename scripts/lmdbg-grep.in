#!/bin/sh

set -e

if test $# -lt 1; then
    cat <<EOF
usage: lmdbg-grep <awk_expr> [files...]
EOF
    exit 1
fi

expr="$1"
shift

if printf "%s\n" "$expr" | grep addrline > /dev/null; then
    addrline_mode=1
else
    addrline_mode=0
fi

echo "expr=$expr"

@AWK@ -v addrline_mode="$addrline_mode" '
BEGIN {
    ok = -1 # -1 - unknown, 0 - false, 1 - true
    count = 0
}

function condition (){
#    print "$0=" $0
    return '"$expr"'
}

function update_skip (){
    if (addrline_mode){
	if (!/^ /)
	    return
	addrline = $0
    }else{
	if (/^ /)
	    return
    }

    ok = condition()
    if (addrline_mode && ok == 0)
	ok = -1
    else if (ok == 1){
#	print "count = " count
	for (i=0; i < count; ++i){
	    print accu [i]
	}

	count = 0
    }
}

$0 ~ /^info / {
    print $0
    next
}

$0 ~ /^ / {
    if (ok == 1){
	print
    }else if (ok == 0){
    }else{
#	print "a " $0
	accu [count++] = $0
	update_skip()
#	print "ok " ok, count
    }

    next
}

{
    peak = max = allocs = leaks = 0
}

/^stacktrace / {
    for (i=1; i <= NF; ++i){
	if ($i == "peak:"){
	    peak = $(i+1)
	}else if ($i == "max:"){
	    max = $(i+1)
	}else if ($i == "allocs:"){
	    allocs = $(i+1)
	}else if ($i == "leaks:"){
	    leaks = $(i+1)
	}
    }
}

{
    accu [0] = $0
    count = 1

    ok = -1
    update_skip()
}
' "$@"
