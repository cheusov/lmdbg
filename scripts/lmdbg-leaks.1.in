.\" Copyright (c) 2008-2011 by Aleksey Cheusov (vle@gmx.net)
.\" Absolutely no warranty.
.\"
.\" ------------------------------------------------------------------
.de VB \" Verbatim Begin
.ft CW
.nf
.ne \\$1
..
.de VE \" Verbatim End
.ft R
.fi
..
.\" ------------------------------------------------------------------
.TH LMDBG-LEAKS 1 "Feb 17, 2023" "" ""
.SH NAME
lmdbg-leaks \- extracts memory leaks from lmdbg-run's output
.SH SYNOPSIS
.BI lmdbg-leaks " [OPTIONS] [files...]"
.SH DESCRIPTION
.B lmdbg-leaks
analyses
.BR lmdbg-run "'s"
output and outputs stacktraces with
memory leaks.
.SH OPTIONS
.TP
.B "-h"
Display help message.
.TP
.BI "-V"
Display the lmdbg version.
.TP
.BI "-p"
Flush leaks per <count> allocations. This option is for debugging
purposes only.
.SH EXAMPLE
.VB
$ cat test3.c
#include <stdlib.h>

int main ()
{
   void *p1 = NULL;
   void *p2 = NULL;

   p1 = malloc (555);
   p2 = realloc (p2, 666);
   free (p1);

   return 0;
}
$ cc -O0 -g -o test3 test3.c
$ lmdbg-run -o log ./test3
$ cat log
info section 0x0xbbace000 0x0xbbbc6000 /lib/libc.so.12.179
info section 0x0xbbbdd000 0x0xbbbe1000 /usr/pkg/lib/liblmdbg.so.0.0
info section 0x0xbbbee000 0x0xbbbfe000 /libexec/ld.elf_so
info progname ./test3
malloc ( 555 ) --> 0xbb90a400 num: 1
 0xbbbddb7a
 0xbbbde53b
 0x8048799
 0x804866d
 0x80486a8
realloc ( NULL , 666 ) --> 0xbb90a800 num: 2
 0xbbbddb7a
 0xbbbde68c
 0x80487b1
 0x804866d
 0x80486a8
free ( 0xbb90a400 ) num: 3
 0xbbbddb7a
 0xbbbde785
 0x80487c1
 0x804866d
 0x80486a8
$ lmdbg-leaks log
info section 0x0xbbace000 0x0xbbbc6000 /lib/libc.so.12.179
info section 0x0xbbbdd000 0x0xbbbe1000 /usr/pkg/lib/liblmdbg.so.0.0
info section 0x0xbbbee000 0x0xbbbfe000 /libexec/ld.elf_so
info progname ./test3
realloc ( NULL , 666 ) --> 0xbb90a800 num: 2
 0xbbbddb7a
 0xbbbde68c
 0x80487b1
 0x804866d
 0x80486a8
$
.VE
.SH KNOWN BUGS
.B lmdbg-leaks
works incorrectly for memory allocated by
.B mmap(2)
and freed by multiple
.BR munmap(2) .
See
.BI lmdbg-run " -m"
for details.
.SH EXAMPLE
.VB
lmdbg-run -o log ./my_app &&
  lmdbg-leaks log > log_leaks &&
  lmdbg-sym ./my_app log_leaks > log_leaks2 &&
  lmdbg-sysleaks -s log_leaks2 > log_final
lmdbg-run -p 'lmdbg-leaks | lmdbg-sym > log' ./my_app <args>
.VE
.SH SEE ALSO
.BR lmdbg(1) ,
.BR lmdbg-run(1) ,
.BR lmdbg-sym(1) ,
.BR lmdbg-stat(1) ,
.BR lmdbg-sort(1) ,
.BR lmdbg-grep(1) ,
.BR lmdbg-head(1) ,
.BR lmdbg-sysleaks(1) ,
.BR lmdbg-strip(1) ,
.B lmdbg-modules(1)
.SH AUTHOR
Aleksey Cheusov <vle@gmx.net>
