.\"	$NetBSD$
.\"
.\" Copyright (c) 2008-2009 by Aleksey Cheusov (vle@gmx.net)
.\" Absolutely no warranty.
.\"
.\" ------------------------------------------------------------------
.de VB \" Verbatim Begin
.ft CW
.nf
.ne \\$1
..
.de VE \" Verbatim End
.ft R
.fi
..
.\" ------------------------------------------------------------------
.TH LMDBG-SYM 1 "May 9, 2009" "" ""
.SH NAME
lmdbg-sym \- convert lmdbg-run addresses to source code positions.
.SH SYNOPSIS
.BI lmdbg-sym " [OPTIONS] <prog> [logfile...]"
.SH DESCRIPTION
.B lmdbg-sym
lmdbg-sym gives a log file generated by lmdbg-run on input and
converts addresses to source file, line number and funtion name if it
is possible. This is done with a help of gdb(1) or addr2line(1)
applications. Result may look like this
.VB

 realloc ( 0xbb901800 , 777 ) --> 0xbb901c00
  0xbbbe58e8
  0xbbbe5a37
  0x8048764     tests/test2.c:10      main
  0x8048584
  0x80484e7

.VE
Here the address 0x8048764 corresponds to the function main, source
file tests/test2.c and line number 10 in it.  Address, source file and
function name are separated by TAB character.
.SH OPTIONS
.TP
.B "-h|--help"
display help message
.TP
.BI "-V|--version"
Display the lmdbg version
.TP
.BI "-g|--with-gdb"
Use gdb(1) for resolving symbols. This is by default.
.TP
.BI "-a"
Use addr2line(1) for resolving symbols.
.TP
.B "--with-so" " filename flags"
dlopen(3) specified libraries with specified flags.
Possible flags are: RTLD_LAZY, RTLD_NOW and RTLD_GLOBAL
.SH ENVIRONMENT
.TP
.B LMDBG_LIB
Path to LD_PRELOAD'ed liblmdbg dynamic library. It defaults to
@PREFIX@/lib/liblmdbg.so
.SH EXAMPLES
.VB
lmdbg-sym -h
lmdbg-sym -V
lmdbg-sym ./my_app _log
lmdbg-sym -a ./a.out < _log
lmdbg-sym -g --with-so /path/to/dll1.so RTLD_NOW ./my_app < _log
.VE
.SH SEE ALSO
.BR lmdbg-run(1) ,
.B lmdbg-leaks(1) ,
.B lmdbg-sysleaks(1) ,
.B lmdbg-leak-check(1) ,
.B gdb(1) ,
.B addr2line(1)
.SH AUTHOR
Aleksey Cheusov <vle@gmx.net>
